name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }} / FDB ${{ matrix.fdb-version }} / API ${{ matrix.fdb-api-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cabal: ["3.2"]
        ghc:
          - "8.6.5"
          - "8.8.3"
          - "8.10.1"
        fdb-version:
          - "6.2.20"
          - "6.1.13"
          - "6.0.18"
          - "5.2.8"
        fdb-api-version:
          - "520"
          - "600"
          - "610"
          - "620"
        # For a given installed FDB version, the client can choose to connect
        # with an older version, but not a newer. This clumsily enforces that
        # rule.
        exclude:
          - {fdb-version: "6.1.13", fdb-api-version: "620"}
          - {fdb-version: "6.0.18", fdb-api-version: "620"}
          - {fdb-version: "6.0.18", fdb-api-version: "610"}
          - {fdb-version: "5.2.8", fdb-api-version: "620"}
          - {fdb-version: "5.2.8", fdb-api-version: "610"}
          - {fdb-version: "5.2.8", fdb-api-version: "600"}

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - name: Install foundationdb
      run: ci/install-deps.sh ${{ matrix.fdb-version }}

    - uses: actions/setup-haskell@v1.1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        source ci/export-fdb-version-flag-cabal.sh ${{ matrix.fdb-version }}
        cabal update
        cabal configure ${FDB_VER_FLAG}
        cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: Test
      env:
        FDB_HASKELL_TEST_API_VERSION: ${{ matrix.fdb-api-version }}
      run: |
        cabal test all --enable-tests

  stack:
    name: stack / ghc ${{ matrix.ghc }} / FDB ${{ matrix.fdb-version }} / API ${{ matrix.fdb-api-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        stack: ["2.1.3"]
        ghc: ["8.8.3"]
        fdb-version:
          - "6.2.20"
          - "6.1.13"
          - "6.0.18"
          - "5.2.8"
        fdb-api-version:
          - "520"
          - "600"
          - "610"
          - "620"
        # For a given installed FDB version, the client can choose to connect
        # with an older version, but not a newer. This clumsily enforces that
        # rule.
        exclude:
          - {fdb-version: "6.1.13", fdb-api-version: "620"}
          - {fdb-version: "6.0.18", fdb-api-version: "620"}
          - {fdb-version: "6.0.18", fdb-api-version: "610"}
          - {fdb-version: "5.2.8", fdb-api-version: "620"}
          - {fdb-version: "5.2.8", fdb-api-version: "610"}
          - {fdb-version: "5.2.8", fdb-api-version: "600"}

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - name: Install foundationdb
      run: ci/install-deps.sh ${{ matrix.fdb-version }}

    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        source ci/export-fdb-version-flag-stack.sh ${{ matrix.fdb-version }}
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks ${FDB_VER_FLAG}

    - name: Test
      env:
        FDB_HASKELL_TEST_API_VERSION: ${{ matrix.fdb-api-version }}
      run: |
        stack test --system-ghc
